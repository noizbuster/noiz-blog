<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comet on My New Hugo Site</title>
    <link>http://example.org/tags/comet/</link>
    <description>Recent content in Comet on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Apr 2016 10:54:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/comet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>똑똑하게 서버사이드 폴링 하기</title>
      <link>http://example.org/posts/2016-04-04-serverside-polling/2016-04-04-serverside-polling/</link>
      <pubDate>Mon, 04 Apr 2016 10:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016-04-04-serverside-polling/2016-04-04-serverside-polling/</guid>
      <description>Comet과 LongPolling 웹에서 데이터를 폴링하기 위한 개념으로 comet 이라는 모델이 제시되어있다.
이것을 구현하는 방법중 하나가 롱 폴링이다.
 comet 에 대한 설명 https://en.wikipedia.org/wiki/Comet_(programming)
한글로 된 간략한 설명
http://egloos.zum.com/genes1s/v/2699984
 요약하자면 단발성으로 http request 를 하는것이 아니라 connection을 물고 있다가
이벤트가 발생하면 응답하여 반응성을 높이는것이다.
pro : 응답성이 빠르다
con : 커넥션을 쥐고 있어야 하기 때문에 자원이 많이 든다.
폴링주기가 제법 길다 &amp;ndash;&amp;gt; 그냥 주기적으로 http request
폴링주기가 아주 짧다 &amp;ndash;&amp;gt; comet, longpolling 사용</description>
    </item>
    
  </channel>
</rss>