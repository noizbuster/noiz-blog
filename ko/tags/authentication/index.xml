<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>authentication on NoizBuster</title>
    <link>https://blog.noizbuster.com/ko/tags/authentication/</link>
    <description>Recent content in authentication on NoizBuster</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 31 Oct 2016 11:22:49 +0000</lastBuildDate><atom:link href="https://blog.noizbuster.com/ko/tags/authentication/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>authentication-on-msa</title>
      <link>https://blog.noizbuster.com/ko/posts/2016-10-31-112249-authentication-on-msa/</link>
      <pubDate>Mon, 31 Oct 2016 11:22:49 +0000</pubDate>
      
      <guid>https://blog.noizbuster.com/ko/posts/2016-10-31-112249-authentication-on-msa/</guid>
      <description>목표 Micro Service Architecture(MSA) 에 부합하게 Authentication 을 전담하는 서비스를 분리하고 구현하는것을 목표로 한다.
현재의 상황 현재 API Gateway 에서 MongoDB 에 저장된 User, Permissions, User Group, Permission Group 에 접근하여 권한이나 조직관리를 할 수 있게 구현되어있다.
나중에 여러가지
References  http://nordicapis.com/how-to-control-user-identity-within-microservices/ https://www.quora.com/How-do-I-handle-authentication-in-a-microservices-architecture-with-the-front-end-decoupled-too  </description>
    </item>
    
  </channel>
</rss>
